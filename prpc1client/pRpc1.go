// Code generated by goctl. DO NOT EDIT!
// Source: pRpc1.proto

package prpc1client

import (
	"context"

	"github.com/pz2147/p-rpc-1/prpc1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthReq      = prpc1.AuthReq
	AuthResp     = prpc1.AuthResp
	EmptyReq     = prpc1.EmptyReq
	EmptyResp    = prpc1.EmptyResp
	Request      = prpc1.Request
	Response     = prpc1.Response
	UserInfoReq  = prpc1.UserInfoReq
	UserInfoResp = prpc1.UserInfoResp

	PRpc1 interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		// ESGuide elastic教程
		ESGuide(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*EmptyResp, error)
		//  Login 登录
		Login(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*AuthResp, error)
		//  UserInfo 获取用户数据
		UserInfoGet(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
	}

	defaultPRpc1 struct {
		cli zrpc.Client
	}
)

func NewPRpc1(cli zrpc.Client) PRpc1 {
	return &defaultPRpc1{
		cli: cli,
	}
}

func (m *defaultPRpc1) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := prpc1.NewPRpc1Client(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

// ESGuide elastic教程
func (m *defaultPRpc1) ESGuide(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	client := prpc1.NewPRpc1Client(m.cli.Conn())
	return client.ESGuide(ctx, in, opts...)
}

//  Login 登录
func (m *defaultPRpc1) Login(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*AuthResp, error) {
	client := prpc1.NewPRpc1Client(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

//  UserInfo 获取用户数据
func (m *defaultPRpc1) UserInfoGet(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := prpc1.NewPRpc1Client(m.cli.Conn())
	return client.UserInfoGet(ctx, in, opts...)
}
