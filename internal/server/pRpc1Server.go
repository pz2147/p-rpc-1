// Code generated by goctl. DO NOT EDIT!
// Source: pRpc1.proto

package server

import (
	"context"

	"github.com/pz2147/p-rpc-1/internal/logic"
	"github.com/pz2147/p-rpc-1/internal/svc"
	"github.com/pz2147/p-rpc-1/prpc1"
)

type PRpc1Server struct {
	svcCtx *svc.ServiceContext
}

func NewPRpc1Server(svcCtx *svc.ServiceContext) *PRpc1Server {
	return &PRpc1Server{
		svcCtx: svcCtx,
	}
}

func (s *PRpc1Server) Ping(ctx context.Context, in *prpc1.Request) (*prpc1.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

// ESGuide elastic教程
func (s *PRpc1Server) ESGuide(ctx context.Context, in *prpc1.EmptyReq) (*prpc1.EmptyResp, error) {
	l := logic.NewESGuideLogic(ctx, s.svcCtx)
	return l.ESGuide(in)
}

//  Login 登录
func (s *PRpc1Server) Login(ctx context.Context, in *prpc1.AuthReq) (*prpc1.AuthResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

//  UserInfo 获取用户数据
func (s *PRpc1Server) UserInfoGet(ctx context.Context, in *prpc1.UserInfoReq) (*prpc1.UserInfoResp, error) {
	l := logic.NewUserInfoGetLogic(ctx, s.svcCtx)
	return l.UserInfoGet(in)
}
