syntax = "proto3";

package pRpc1;

option go_package = "prpc1";

message EmptyReq {}
message EmptyResp {}


message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

message Test1Req {
  string rStr = 1;
  int64 rInt = 2;
  Test1CellModel rMap = 3;
}

message Test1CellModel {
  string cp = 1;
}

message Test1Resp {
  string rStr = 1;
  int64 rInt = 2;
  Test1CellModel rMap = 3;
}

message Test2Req {
  string rStr = 1;
  int64 rInt = 2;
}

message Test2Resp {
  string rStr = 1;
  int64 rInt = 2;
}

message Test3Req {
  string rStr = 1;
  int64 rInt = 2;
}

message Test3Resp {
  string rStr = 1;
  int64 rInt = 2;
}

message AuthReq {
  string phone = 1;
  string password = 2;
}

message AuthResp {
  string uid = 1;
  string nickname = 2;
  string pic = 3;
}


service PRpc1 {
  rpc Ping(Request) returns(Response);

  //ESGuide elastic教程
  rpc ESGuide(EmptyReq) returns(EmptyResp);


  //Test1 测试1
  rpc Test1(Test1Req) returns(Test1Resp);

  //Test2 测试2
  rpc Test2(Test2Req) returns(Test2Resp);

  // Test3 测试3
  rpc Test3(Test3Req) returns(Test3Resp);

  // CheckAuth 风控检查
  rpc CheckAuth(AuthReq) returns(AuthResp);

  // Login 登录
  rpc Login(AuthReq) returns(AuthResp);
}
